version: '3'

volumes:
  static:
  media:
  index:
  letsencrypt:
  production_postgres_data:
  production_postgres_data_backups:

services:
  django: &django
    build:
      context: .
      dockerfile: compose/production/django/DockerfileMainland
    image: django_blog_project_production_django
    working_dir: /app
    depends_on:
      - postgres
      - redis
    volumes:
      - index:/app/blogproject/index/
      - static:/app/static
      - media:/app/blogproject/media
    env_file:
      - .envs/.production/.django
      - .envs/.production/.postgres
    expose:
      - "8000"
    command: /start.sh

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: django_blog_project_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  redis:
    image: redis:5.0

  celeryworker:
    <<: *django
    image: django_blog_project_production_celeryworker
    command: /start-celeryworker.sh

  celerybeat:
    <<: *django
    image: django_blog_project_production_celerybeat
    command: /start-celerybeat.sh

  statusok:
    image: gadget1999/statusok
    depends_on:
      - nginx
    volumes:
      - ./compose/production/statusok/config/config.json:/app/config.json

  nginx:
    build:
      context: .
      dockerfile: compose/production/nginx/DockerfileMainland
    image: django_blog_project_production_nginx
    depends_on:
      - django
    volumes:
      - static:/apps/blogproject/static
      - media:/apps/blogproject/media
      - letsencrypt:/etc/letsencrypt
    ports:
      - "${PORT:-80}:80"
      - "${SECURE_PORT:-443}:443"
